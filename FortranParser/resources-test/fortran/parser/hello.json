{"nodes": [
{
"id": "0x5649dde24400-Program",
"ProgramUnit": [
"0x5649dde4cdf0-ProgramUnit"]
},
{
"id": "0x5649dde4cdf0-ProgramUnit",
"value": "0x5649dde4d850-MainProgram"
},
{
"id": "0x5649dde4d850-MainProgram",
"Statement<ProgramStmt>": "0x5649dde4d998-Statement",
"SpecificationPart": "0x5649dde4d8f0-SpecificationPart",
"ExecutionPart": "0x5649dde4d8d8-ExecutionPart",
"Statement<EndProgramStmt>": "0x5649dde4d850-Statement"
},
{
"id": "0x5649dde4d998-Statement",
"statement": "0x5649dde4d9a8-ProgramStmt",
"label": "null",
"source": "program hello"
},
{
"id": "0x5649dde4d9a8-ProgramStmt",
"Name": "0x5649dde4d9a8-Name"
},
{
"id": "0x5649dde4d9a8-Name",
"source": "hello"
},
{
"id": "0x5649dde4d8f0-SpecificationPart",
"ImplicitPart": "0x5649dde4d908-ImplicitPart"
},
{
"id": "0x5649dde4d908-ImplicitPart"
},
{
"id": "0x5649dde4d8d8-ExecutionPart",
"ExecutionPartConstruct": [
"0x5649dde4fd00-ExecutionPartConstruct",
"0x5649dde500a0-ExecutionPartConstruct"]
},
{
"id": "0x5649dde4d8d8-ExecutionPartConstruct"
},
{
"id": "0x5649dde4fd00-ExecutionPartConstruct",
"value": "0x5649dde4fd00-ExecutableConstruct"
},
{
"id": "0x5649dde4fd00-ExecutableConstruct",
"value<ActionStmt>": "0x5649dde4fd00-Statement"
},
{
"id": "0x5649dde4fd00-Statement",
"statement": "0x5649dde4fd10-ActionStmt",
"label": "null",
"source": "print *, 'Hello, World!'"
},
{
"id": "0x5649dde4fd10-ActionStmt",
"value": "0x5649dde4fb80-PrintStmt"
},
{
"id": "0x5649dde4fb80-PrintStmt",
"Format": "0x5649dde4fb98-Format",
"OutputItem": [
"0x5649dde4d770-OutputItem"]
},
{
"id": "0x5649dde4fb98-Format",
"value": "0x5649dde4fb98-Star"
},
{
"id": "0x5649dde4fb98-Star"
},
{
"id": "0x5649dde4d770-OutputItem",
"value": "0x5649dde4d770-Expr"
},
{
"id": "0x5649dde4d770-Expr",
"value": "0x5649dde4d790-LiteralConstant"
},
{
"id": "0x5649dde4d790-LiteralConstant",
"value": "0x5649dde4d790-CharLiteralConstant"
},
{
"id": "0x5649dde4d790-CharLiteralConstant",
"string": "Hello, World!"
},
{
"id": "0x5649dde500a0-ExecutionPartConstruct",
"value": "0x5649dde500a0-ExecutableConstruct"
},
{
"id": "0x5649dde500a0-ExecutableConstruct",
"value<ActionStmt>": "0x5649dde500a0-Statement"
},
{
"id": "0x5649dde500a0-Statement",
"statement": "0x5649dde500b0-ActionStmt",
"label": "null",
"source": "print '(A, F6.3)', 'Value = ', 3"
},
{
"id": "0x5649dde500b0-ActionStmt",
"value": "0x5649dde4ff90-PrintStmt"
},
{
"id": "0x5649dde4ff90-PrintStmt",
"Format": "0x5649dde4ffa8-Format",
"OutputItem": [
"0x5649dde4feb0-OutputItem",
"0x5649dde4fdc0-OutputItem"]
},
{
"id": "0x5649dde4ffa8-Format",
"value": "0x5649dde4ffa8-Expr"
},
{
"id": "0x5649dde4ffa8-Expr",
"value": "0x5649dde4ffc8-LiteralConstant"
},
{
"id": "0x5649dde4ffc8-LiteralConstant",
"value": "0x5649dde4ffc8-CharLiteralConstant"
},
{
"id": "0x5649dde4ffc8-CharLiteralConstant",
"string": "(A, F6.3)"
},
{
"id": "0x5649dde4feb0-OutputItem",
"value": "0x5649dde4feb0-Expr"
},
{
"id": "0x5649dde4feb0-Expr",
"value": "0x5649dde4fed0-LiteralConstant"
},
{
"id": "0x5649dde4fed0-LiteralConstant",
"value": "0x5649dde4fed0-CharLiteralConstant"
},
{
"id": "0x5649dde4fed0-CharLiteralConstant",
"string": "Value = "
},
{
"id": "0x5649dde4fdc0-OutputItem",
"value": "0x5649dde4fdc0-Expr"
},
{
"id": "0x5649dde4fdc0-Expr",
"value": "0x5649dde4fde0-LiteralConstant"
},
{
"id": "0x5649dde4fde0-LiteralConstant",
"value": "0x5649dde4fde0-IntLiteralConstant"
},
{
"id": "0x5649dde4fde0-IntLiteralConstant",
"CharBlock": "3"
},
{
"id": "0x5649dde4d850-Statement",
"statement": "0x5649dde4d860-EndProgramStmt",
"label": "null",
"source": "end program hello"
},
{
"id": "0x5649dde4d860-EndProgramStmt",
"Name": "0x5649dde4d860-Name"
},
{
"id": "0x5649dde4d860-Name",
"source": "hello"
}],
"enums": {
  "Fortran::common::CUDADataAttr": ["Constant", "Device", "Managed", "Pinned", "Shared", "Texture", "Unified"],
  "Fortran::common::CUDASubprogramAttrs": ["Host", "Device", "HostDevice", "Global", "Grid_Global"],
  "Fortran::common::OpenACCDeviceType": ["Star", "Default", "Nvidia", "Radeon", "Host", "Multicore", "None"],
  "Fortran::parser::AccDataModifier::Modifier": ["ReadOnly", "Zero"],
  "Fortran::parser::AccessSpec::Kind": ["Public", "Private"],
  "Fortran::parser::BindEntity::Kind": ["Object", "Common"],
  "Fortran::parser::ConnectSpec::CharExpr::Kind": ["Access", "Action", "Asynchronous", "Blank", "Decimal", "Delim", "Encoding", "Form", "Pad", "Position", "Round", "Sign", "Carriagecontrol", "Convert", "Dispose"],
  "Fortran::parser::DefinedOperator::IntrinsicOperator": ["Power", "Multiply", "Divide", "Add", "Subtract", "Concat", "LT", "LE", "EQ", "NE", "GE", "GT", "NOT", "AND", "OR", "EQV", "NEQV"],
  "Fortran::parser::ImplicitStmt::ImplicitNoneNameSpec": ["External", "Type"],
  "Fortran::parser::InquireSpec::CharVar::Kind": ["Access", "Action", "Asynchronous", "Blank", "Decimal", "Delim", "Direct", "Encoding", "Form", "Formatted", "Iomsg", "Name", "Pad", "Position", "Read", "Readwrite", "Round", "Sequential", "Sign", "Stream", "Status", "Unformatted", "Write", "Carriagecontrol", "Convert", "Dispose"],
  "Fortran::parser::InquireSpec::IntVar::Kind": ["Iostat", "Nextrec", "Number", "Pos", "Recl", "Size"],
  "Fortran::parser::InquireSpec::LogVar::Kind": ["Exist", "Named", "Opened", "Pending"],
  "Fortran::parser::IntentSpec::Intent": ["In", "Out", "InOut"],
  "Fortran::parser::IoControlSpec::CharExpr::Kind": ["Advance", "Blank", "Decimal", "Delim", "Pad", "Round", "Sign"],
  "Fortran::parser::ReductionOperator::Operator": ["Plus", "Multiply", "Max", "Min", "Iand", "Ior", "Ieor", "And", "Or", "Eqv", "Neqv"],
  "Fortran::parser::OmpTraitSelectorName::Value": ["Arch", "Atomic_Default_Mem_Order", "Condition", "Device_Num", "Extension", "Isa", "Kind", "Requires", "Simd", "Uid", "Vendor"],
  "Fortran::parser::OmpTraitSetSelectorName::Value": ["Construct", "Device", "Implementation", "Target_Device", "User"],
  "Fortran::parser::OmpMapType::Value": ["Alloc", "Delete", "From", "Release", "To", "Tofrom"],
  "Fortran::parser::OmpMapTypeModifier::Value": ["Always", "Close", "Present", "Ompx_Hold"],
  "Fortran::parser::OmpAtClause::ActionTime": ["Compilation", "Execution"],
  "Fortran::parser::OmpSeverityClause::Severity": ["Fatal", "Warning"],
  "Fortran::parser::OmpCancelType::Type": ["Parallel", "Sections", "Do", "Taskgroup"],
  "Fortran::parser::OmpDefaultClause::DataSharingAttribute": ["Private", "Firstprivate", "Shared", "None"],
  "Fortran::parser::OmpVariableCategory::Value": ["Aggregate", "All", "Allocatable", "Pointer", "Scalar"],
  "Fortran::parser::OmpDefaultmapClause::ImplicitBehavior": ["Alloc", "To", "From", "Tofrom", "Firstprivate", "None", "Default"],
  "Fortran::parser::OmpDependenceType::Value": ["Sink", "Source"],
  "Fortran::parser::OmpTaskDependenceType::Value": ["In", "Out", "Inout", "Inoutset", "Mutexinoutset", "Depobj"],
  "Fortran::parser::OmpExpectation::Value": ["Present"],
  "Fortran::parser::OmpLastprivateModifier::Value": ["Conditional"],
  "Fortran::parser::OmpLinearModifier::Value": ["Ref", "Uval", "Val"],
  "Fortran::parser::OmpOrderClause::Ordering": ["Concurrent"],
  "Fortran::parser::OmpOrderModifier::Value": ["Reproducible", "Unconstrained"],
  "Fortran::parser::OmpPrescriptiveness::Value": ["Strict"],
  "Fortran::parser::OmpBindClause::Binding": ["Parallel", "Teams", "Thread"],
  "Fortran::parser::OmpProcBindClause::AffinityPolicy": ["Close", "Master", "Spread", "Primary"],
  "Fortran::parser::OmpReductionModifier::Value": ["Default", "Inscan", "Task"],
  "Fortran::parser::OmpScheduleClause::Kind": ["Static", "Dynamic", "Guided", "Auto", "Runtime"],
  "Fortran::parser::OmpDeviceModifier::Value": ["Ancestor", "Device_Num"],
  "Fortran::parser::OmpDeviceTypeClause::DeviceTypeDescription": ["Any", "Host", "Nohost"],
  "Fortran::parser::OmpChunkModifier::Value": ["Simd"],
  "Fortran::parser::OmpOrderingModifier::Value": ["Monotonic", "Nonmonotonic", "Simd"],
  "Fortran::common::OmpAtomicDefaultMemOrderType": ["SeqCst", "AcqRel", "Relaxed"],
  "Fortran::parser::ProcedureStmt::Kind": ["ModuleProcedure", "Procedure"],
  "Fortran::parser::SavedEntity::Kind": ["Entity", "Common"],
  "Fortran::parser::StopStmt::Kind": ["Stop", "ErrorStop"],
  "Fortran::parser::UseStmt::ModuleNature": ["Intrinsic", "Non_Intrinsic"]
}
}
